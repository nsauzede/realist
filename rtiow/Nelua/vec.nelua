require 'math'
global Vec3: type = @record{a: array(float32,3)}
global Vec3: type = @record{x:float32,y:float32,z:float32}

function Vec3.__add(a: Vec3, b: Vec3)
    return Vec3{a.x + b.x, a.y + b.y, a.z + b.z}
end

function Vec3.__sub(a: Vec3, b: Vec3)
    return Vec3{a.x - b.x, a.y - b.y, a.z - b.z}
end

function Vec3.__mul(t: float32, v: Vec3)
    return Vec3{t*v.x, t*v.y, t*v.z}
end

function Vec3.__div(v: Vec3, t: float32)
    return Vec3{v.x / t, v.y / t, v.z / t}
end

global function dot(v1: Vec3, v2: Vec3)
    return v1.x *v2.x + v1.y * v2.y + v1.z * v2.z
end

function Vec3.dot(self: Vec3, v2: Vec3)
    return self.x * v2.x + self.y * v2.y + self.z * v2.z
end

function Vec3.print(self: Vec3)
    print(self.x, self.y, self.z)
end

function Vec3.length(self: Vec3)
    return math.sqrt(self.x * self.x + self.y * self.y + self.z * self.z)
end

function Vec3.unit_vector(self: Vec3)
    return self / self:length()
end
